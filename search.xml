<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>sublime的安装与配置</title>
    <url>/2021/10/12/sublime/</url>
    <content><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sublime Text 是一个<font color="#ff0000" >文本编辑器</font>（收费软件，可以无限期试用，但是会有激活提示弹窗），同时也是一个先进的<font color="#ff0000" >代码编辑器</font>。Sublime Text是由程序员Jon Skinner于2008年1月份所开发出来，它最初被设计为一个具有丰富扩展功能的Vim。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sublime Text具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。Sublime Text的主要功能包括：<font color="#0000ff" size="2">拼写检查，书签，完整的Python API ， Goto 功能，即时项目切换，多选择，多窗口</font>等等。Sublime Text 是一个跨平台的编辑器，同时支持<font color="#ff00ff" size="2">Windows、Linux、Mac OS X</font>等操作系统。</p>
<hr>
<p><strong>直接进入主题</strong></p>
<p><font color="#000000" >1.先去百度上搜索sublime,点击官方的链接。也可直接直接点击我给的地址过去<font color="#0000ff" size="2"><a href="https://www.sublimetext.com/">https://www.sublimetext.com/</a></font> &nbsp;
当然,已经有安装包的请跳过这一步和第二步,直接到第三步，如果已经安装软件直接跳到第五步!</font><p>
<img src="/img/sublime/1.png">
<p>2.进入官网之后就是下图的界面,这时直接点击<font color="#ff0000" size="2">DOWNLOAD FOR WINDOWS</font>就OK了。<p>
<img src="/img/sublime/2.png">
<p>3.下载好后双击安装，一直点是就行(安装路径可自行更改)。如果在桌面看不到软件图标的话,点击窗口键就可看到软件图标了。如果嫌每次如此打开麻烦，可以给sublime软件设置快捷方式:<font color="#ff0000" size="2">右击软件(图片2位置) —>更多 —>打开文件路径 —>找到Sublime Text文件 —>拖动到桌面</font>，最后就可直接在桌面打开sublime了。<p>
<img src="/img/sublime/3.png">
<img src="/img/sublime/4.png">
<p>4.现在就到sublime默认浏览器的配置了<font color="#0000ff" size="2">(此教程为电脑默认浏览器是什么浏览器，sublime就把默认浏览器设置为相应的浏览器,如需更改请自行百度,或者直接私信我)</font>
<p>5.打开软件后<font color="#ff0000" >点击Tools选项,最末尾有个Install Package Control...选项</font>，点击它就会下载一个控制包<font color="#0000ff" size="2">(需要有网，并且请耐心等待!)</font>。<p>
<img src="/img/sublime/5.png">
<p>6.控制包下载好后会有下图提示，点击确认就行。<font color="#ff0000" >(在第五步完成后等待软件自己下载好，然后就会弹出提示)</font><p>
<img src="/img/sublime/6.png">
<p>7.此处不啰嗦，按下图行事!<p>
<img src="/img/sublime/7.png">
<p>8.进入settings之后会有如下界面弹出,<font color="#ff0000" size="2">把右边红色框起来的代码全部删除!</font><p>
<img src="/img/sublime/8.png">
<p>9.把右边代码删除之后，复制如下代码:<p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> &quot;bootstrapped&quot;: true,</span><br><span class="line"> &quot;in_process_packages&quot;:</span><br><span class="line"> [</span><br><span class="line"> ],</span><br><span class="line"> &quot;installed_packages&quot;:</span><br><span class="line"> [</span><br><span class="line">  &quot;HTML-CSS-JS Prettify&quot;,</span><br><span class="line">  &quot;Package Control&quot;,</span><br><span class="line">  &quot;View In Browser&quot;,</span><br><span class="line"> ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>10.效果如下:<p>
<img src="/img/sublime/9.png">
<p><font size="3" color="#ff0000">先保存再关掉!(需要网络,要不然sublime自动安装插件不成功!)</font>
<p>11.最后!当在编辑器上敲好一个html代码时，<font color="#ff0000" >Ctrl+s保存(并且后缀名为html!)</font>，这时在编辑器右击就可看到<font color="#ff0000" >Open in Browser</font>，点击它就可在浏览器展示html了。此处我以一个简单的html代码展示:<p>
<img src="/img/sublime/10.png">
<p><font size="3" color="#ff0000">注:一定要保存!后缀名一定要是.html!</font>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>sublime</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode的安装与配置</title>
    <url>/2021/10/20/vscode/</url>
    <content><![CDATA[<p><strong>一、关于 VS Code</strong><br>Visual Studio Code(VS Code)是微软2015年推出的一个轻量但功能强大的源代码编辑器，基于 Electron 开发，支持 Windows、Linux 和 macOS 操作系统。内置了对JavaScript，TypeScript和Node.js的支持并且具有丰富的其它语言和扩展的支持，功能超级强大。<br>VSCode是一款免费开源的现代化轻量级代码编辑器，支持几乎所有主流的开发语言的语法高亮、智能代码补全、自定义快捷键、括号匹配和颜色区分、代码片段、代码对比 Diff、GIT命令等特性，支持插件扩展，并针对网页开发和云端应用开发做了优化。</p>
<p><strong>二、VS Code安装</strong><br>1.VS Code官方下载链接<a href="https://visualstudio.microsoft.com/zh-hans/">https://visualstudio.microsoft.com/zh-hans/</a>,进去后找到下图页面,选择对应的版本下载。<br><img src="/img/vscode/1.png"><br>2.下载好之后双击安装就好,需要注意的就是个人对安装路径的安排(比如我就喜欢安装在D盘),还有一个就是在附加任务里,“将code注册为受支持的文件类型的编辑器”和“添加到PATH”,这两项一定要勾选(默认已选),其他的选项看个人意愿。<br><img src="/img/vscode/2.png"><br>3.进去后点击扩展下载中文包插件和Live Server。<br><img src="/img/vscode/3.png"><br>安装好中文包时会提醒重启,重启就好。<br><img src="/img/vscode/4.png"><br>4.Live Server使用需要注意的地方<br>①.Live Server要工作起来得要在一个文件夹目录下(要不然找不到文件),就是不能在C盘、D盘等等这些盘下工作,简单讲就是VS Code要在一个文件夹内开始项目。比如我在桌面上新建了一个叫“paper”的文件夹(我就用这文件夹来存放我写关于网页的东西,文件夹叫什么名字,用来存放什么内容看自己的需求),然后就用VS Code打开这个文件夹<br><img src="/img/vscode/5.png"><br><img src="/img/vscode/6.png"><br>②.当VS Code进入我新建的“paper”文件夹时,这时候就可以对这个文件夹添加文件或文件夹了。<br><img src="/img/vscode/7.png"><br>③.点击新建文件(建一个.html的文件,我这就建个简单的one.html文件),建好后输入HTML代码(我这就用最基本的html为例)并保存,然后右击文件就会有一个Open with Live Server,点击它,浏览器就会自动展示html网页。<br><img src="/img/vscode/8.png"><br>也可以点击右下角的“GO Live”(没有的话重启VS Code,或者用以上右击使用一次),这样可以快速的打开浏览器。<br><img src="/img/vscode/9.png"><br>5.VS Code的自动保存(搭配Live Server使用特好用,当写好html代码时,不需要手动保存,并且!并且!你的网页也不需要手动刷新就可以展示你修改好后的内容),怎么设置:设置–&gt;文本编辑器–&gt;文件–&gt;Aotu Save<br><img src="/img/vscode/10.png"><br>VS Code的自动保存有三种模式,我比较喜欢模式1:afterDelay<br><img src="/img/vscode/11.png"><br>其他两种模式:onFocusChange、onWindowChange<br><img src="/img/vscode/12.png"><br><img src="/img/vscode/13.png"></p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>eNSP 静态路由的配置</title>
    <url>/2021/10/22/eNSP-%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/</url>
    <content><![CDATA[<h2>什么是静态路由?</h2>

<blockquote>
<p>静态路由（英语：Static routing）是一种路由的方式，路由项（routing entry）由手动配置，而非动态决定。与动态路由不同，静态路由是固定的，不会改变，即使网络状况已经改变或是重新被组态。一般来说，静态路由是由网络管理员逐项加入路由表。</p>
<h2>优点</h2>
使用静态路由的另一个好处是网络安全保密性高。动态路由因为需要路由器之间频繁地交换各自的路由表，而对路由表的分析可以揭示网络的拓扑结构和网络地址等信息。因此，网络出于安全方面的考虑也可以采用静态路由。不占用网络带宽，因为静态路由不会产生更新流量。静态路由适用于中小型网络。
<h2>缺点</h2>
大型和复杂的网络环境通常不宜采用静态路由。一方面，网络管理员难以全面地了解整个网络的拓扑结构；另一方面，当网络的拓扑结构和链路状态发生变化时，路由器中的静态路由信息需要大范围地调整，这一工作的难度和复杂程度非常高。当网络发生变化或网络发生故障时，不能重选路由，很可能使路由失败。
</blockquote>
<p><font size="6">网络拓扑图</font>(画的拓扑图虽然简单,但是该有的配置都有了。)</p>
<blockquote>
<img src="/img/eNSP-静态路由/1.png">
</blockquote>
<h2>配置</h2>

<p>PC1配置:</p>
<blockquote>
<p>  IP地址:10.0.1.1<br>  子网掩码:255.255.255.0<br>  网关:10.0.1.254</p>
</blockquote>
<p>PC2配置:</p>
<blockquote>
<p>IP地址:10.0.2.1<br>子网掩码:255.255.255.0<br>网关:10.0.2.254</p>
</blockquote>
<p>R1配置:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Huawei]sysname R1</span><br><span class="line">[R1]interface g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]ip address 10.0.0.1 24</span><br><span class="line">[R1-GigabitEthernet0/0/0]interface g0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ip address 10.0.1.254 24</span><br><span class="line">[R1-GigabitEthernet0/0/1]quit</span><br></pre></td></tr></table></figure>
<p>R2配置:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Huawei]sysname R2</span><br><span class="line">[R2]interface g0/0/0</span><br><span class="line">[R2-GigabitEthernet0/0/0]ip address 10.0.0.2 24</span><br><span class="line">[R2-GigabitEthernet0/0/0]interface g0/0/1</span><br><span class="line">[R2-GigabitEthernet0/0/1]ip address 10.0.2.254 24</span><br><span class="line">[R2-GigabitEthernet0/0/1]quit</span><br></pre></td></tr></table></figure>
<h2 id="验证网络情况"><a href="#验证网络情况" class="headerlink" title="验证网络情况"></a>验证网络情况</h2><p>1.未配置静态路由前网络互通情况:</p>
<blockquote>
<p>PC1:<br>PC&gt;ping 10.0.2.1</p>
<p>Ping 10.0.2.1: 32 data bytes, Press Ctrl_C to break<br>Request timeout!<br>Request timeout!<br>Request timeout!<br>Request timeout!<br>Request timeout!</p>
<p>— 10.0.2.1 ping statistics —<br> 5 packet(s) transmitted<br> 0 packet(s) received<br> 100.00% packet loss</p>
</blockquote>
<blockquote>
<p>PC2:<br>PC&gt;ping 10.0.1.1</p>
<p>Ping 10.0.1.1: 32 data bytes, Press Ctrl_C to break<br>Request timeout!<br>Request timeout!<br>Request timeout!<br>Request timeout!<br>Request timeout!</p>
<p>— 10.0.1.1 ping statistics —<br> 5 packet(s) transmitted<br> 0 packet(s) received<br> 100.00% packet loss</p>
</blockquote>
<p>2.配置静态路由:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">R1:</span><br><span class="line">    [R1]ip route-static 10.0.2.0 24 10.0.0.2   //ip route-static 目标网段 目标掩码 下一跳ip地址(可以是接口)</span><br><span class="line">R2:</span><br><span class="line">    [R2]ip route-static 10.0.1.0 24 10.0.0.1   //ip route-static 目标网段 目标掩码 下一跳ip地址(可以是接口)</span><br></pre></td></tr></table></figure>
<p>3.配置静态路由后网络互通情况:</p>
<blockquote>
<p>PC1:<br>PC&gt;ping 10.0.2.1</p>
<p>Ping 10.0.2.1: 32 data bytes, Press Ctrl_C to break<br>Request timeout!<br>From 10.0.2.1: bytes=32 seq=2 ttl=254 time=63 ms<br>From 10.0.2.1: bytes=32 seq=3 ttl=254 time=16 ms<br>From 10.0.2.1: bytes=32 seq=4 ttl=254 time=31 ms<br>From 10.0.2.1: bytes=32 seq=5 ttl=254 time=15 ms</p>
<p>— 10.0.2.1 ping statistics —<br> 5 packet(s) transmitted<br> 4 packet(s) received<br> 20.00% packet loss<br> round-trip min/avg/max = 0/31/63 ms</p>
</blockquote>
<blockquote>
<p>PC2:<br>PC&gt;ping 10.0.1.1</p>
<p>Ping 10.0.1.1: 32 data bytes, Press Ctrl_C to break<br>From 10.0.1.1: bytes=32 seq=1 ttl=126 time=32 ms<br>From 10.0.1.1: bytes=32 seq=2 ttl=126 time=15 ms<br>From 10.0.1.1: bytes=32 seq=3 ttl=126 time=16 ms<br>From 10.0.1.1: bytes=32 seq=4 ttl=126 time=31 ms<br>From 10.0.1.1: bytes=32 seq=5 ttl=126 time=16 ms</p>
<p>— 10.0.1.1 ping statistics —<br> 5 packet(s) transmitted<br> 5 packet(s) received<br> 0.00% packet loss<br> round-trip min/avg/max = 15/22/32 ms</p>
</blockquote>
<h4 id="PC机间不通信到互相通信-到此-静态路由配置完毕"><a href="#PC机间不通信到互相通信-到此-静态路由配置完毕" class="headerlink" title="PC机间不通信到互相通信,到此,静态路由配置完毕"></a>PC机间不通信到互相通信,到此,静态路由配置完毕</h4>]]></content>
      <categories>
        <category>eNSP</category>
      </categories>
      <tags>
        <tag>静态路由</tag>
      </tags>
  </entry>
  <entry>
    <title>eNSP rip的配置</title>
    <url>/2021/10/23/eNSP-rip/</url>
    <content><![CDATA[<h2 id="RIP协议"><a href="#RIP协议" class="headerlink" title="RIP协议"></a>RIP协议</h2><blockquote>
<p>RIP(RoutinginformationProtocol)是应用较早、使用较普遍的内部网关协议(InteriorGatewayProtocol,简称IGP)，适用于小型同类网络，是典型的距离向量(算法)协议(一种动态路由协议)，使用0-15跳数来衡量到达目的地址的路由距离。</p>
</blockquote>
<h2 id="为什么使用rip"><a href="#为什么使用rip" class="headerlink" title="为什么使用rip?"></a>为什么使用rip?</h2><blockquote>
<p>在只有静态路由时有几个不能解决的问题:<br>  *当链路状态和网络拓扑结构发生改变时,需要人工对路由器进行大范围更改,工作复杂性高。<br>  *(静态路由)网络发生故障时,不能重选路由,可能会导致路由失败。<br>于是出现了动态路由协议,让路由自己学习网络,适应网络的变化。</p>
</blockquote>
<h2 id="网络拓扑"><a href="#网络拓扑" class="headerlink" title="网络拓扑"></a>网络拓扑</h2><blockquote>
<p><img src="/img/rip/1.png" alt="rip"></p>
</blockquote>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><blockquote>
<p>PC1：<br>IP地址:192.168.1.1<br>子网掩码:255.255.255.0<br>网关:192.168.1.254</p>
</blockquote>
<blockquote>
<p>PC2：<br>IP地址:192.168.2.1<br>子网掩码:255.255.255.0<br>网关:192.168.2.254</p>
</blockquote>
<blockquote>
<p>PC3：<br>IP地址:192.168.4.1<br>子网掩码:255.255.255.0<br>网关:192.168.4.254</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">R1:</span><br><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">Enter system view, return user view with Ctrl+Z.</span><br><span class="line">[Huawei]sysname R1</span><br><span class="line">[R1]interface g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]ip address 192.168.3.1 24</span><br><span class="line">[R1-GigabitEthernet0/0/0]interface g0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ip address 192.168.1.254 24	</span><br><span class="line">[R1-GigabitEthernet0/0/1]quit</span><br><span class="line">[R1]rip </span><br><span class="line">[R1-rip-1]network 192.168.1.0</span><br><span class="line">[R1-rip-1]network 192.168.3.0</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">R2:</span><br><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">Enter system view, return user view with Ctrl+Z.</span><br><span class="line">[Huawei]sysname R2</span><br><span class="line">[R2]interface g0/0/0</span><br><span class="line">[R2-GigabitEthernet0/0/0]ip address 192.168.3.2 24</span><br><span class="line">[R2-GigabitEthernet0/0/0]interface g0/0/1</span><br><span class="line">[R2-GigabitEthernet0/0/1]ip address 192.168.5.1 24	</span><br><span class="line">[R2-GigabitEthernet0/0/1]quit</span><br><span class="line">[R2]vlan 10</span><br><span class="line">[R2-vlan10]interface vlan 10</span><br><span class="line">[R2-Vlanif10]ip address 192.168.2.254 24</span><br><span class="line">[R2-Vlanif10]quit</span><br><span class="line">[R2]interface e0/0/0	</span><br><span class="line">[R2-Ethernet0/0/0]port link-type access </span><br><span class="line">[R2-Ethernet0/0/0]port default vlan 10</span><br><span class="line">[R2-Ethernet0/0/0]quit</span><br><span class="line">[R2]rip </span><br><span class="line">[R2-rip-1]network 192.168.2.0</span><br><span class="line">[R2-rip-1]network 192.168.3.0</span><br><span class="line">[R2-rip-1]network 192.168.5.0</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">R3:</span><br><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">Enter system view, return user view with Ctrl+Z.</span><br><span class="line">[Huawei]sysname R3</span><br><span class="line">[R3]interface g0/0/0</span><br><span class="line">[R3-GigabitEthernet0/0/0]ip address 192.168.5.2 24</span><br><span class="line">[R3-GigabitEthernet0/0/0]interface g0/0/1</span><br><span class="line">[R3-GigabitEthernet0/0/1]ip address 192.168.4.254 24	</span><br><span class="line">[R3-GigabitEthernet0/0/1]quit</span><br><span class="line">[R3]rip </span><br><span class="line">[R3-rip-1]network 192.168.4.0</span><br><span class="line">[R3-rip-1]network 192.168.5.0</span><br></pre></td></tr></table></figure>
<p><font size="6">查看RIP</font>(display ip routing-table protocol rip)</p>
<p>R1 rip信息:</p>
<blockquote>
<p><img src="/img/rip/2.png"></p>
</blockquote>
<p>R2 rip信息:</p>
<blockquote>
<p><img src="/img/rip/3.png"></p>
</blockquote>
<p>R3 rip信息:</p>
<blockquote>
<p><img src="/img/rip/4.png"></p>
</blockquote>
<p>由以上三个图可知,路由器已经通过rip动态路由协议学习了其他的网络。以R3路由器为例,R3路由器本身就可以访问192.168.4.0和192.168.5.0这两个网段的网络(R3连接有这两个网络),再看R rip信息的图,Destination/Mask的信息里就没有这两个网段的信息,而192.168.1.0，192.168.2.0，192.168.3.0这三个网络是R3使用rip协议学习来的,通过NextHop(下一跳)学习得来。<br>通俗来讲就是,你跟张三是好朋友,你想认识李四,你知道张三跟李四是好朋友(你的好朋友张三告诉你的),这时你就可以通过张三来认识李四了。<br><br></p>
<h2 id="PC间的网络情况"><a href="#PC间的网络情况" class="headerlink" title="PC间的网络情况"></a>PC间的网络情况</h2><p>PC１：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PC&gt;ping 192.168.2.1</span><br><span class="line"></span><br><span class="line">Ping 192.168.2.1: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">Request timeout!</span><br><span class="line">From 192.168.2.1: bytes=32 seq=2 ttl=126 time=16 ms</span><br><span class="line">From 192.168.2.1: bytes=32 seq=3 ttl=126 time=31 ms</span><br><span class="line">From 192.168.2.1: bytes=32 seq=4 ttl=126 time=16 ms</span><br><span class="line">From 192.168.2.1: bytes=32 seq=5 ttl=126 time=16 ms</span><br><span class="line"></span><br><span class="line">--- 192.168.2.1 ping statistics ---</span><br><span class="line">  5 packet(s) transmitted</span><br><span class="line">  4 packet(s) received</span><br><span class="line">  20.00% packet loss</span><br><span class="line">  round-trip min/avg/max = 0/19/31 ms</span><br><span class="line"></span><br><span class="line">PC&gt;ping 192.168.4.1</span><br><span class="line"></span><br><span class="line">Ping 192.168.4.1: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.4.1: bytes=32 seq=1 ttl=125 time=16 ms</span><br><span class="line">From 192.168.4.1: bytes=32 seq=2 ttl=125 time=31 ms</span><br><span class="line">Request timeout!</span><br><span class="line">From 192.168.4.1: bytes=32 seq=4 ttl=125 time=31 ms</span><br><span class="line">From 192.168.4.1: bytes=32 seq=5 ttl=125 time=32 ms</span><br><span class="line"></span><br><span class="line">--- 192.168.4.1 ping statistics ---</span><br><span class="line">  5 packet(s) transmitted</span><br><span class="line">  4 packet(s) received</span><br><span class="line">  20.00% packet loss</span><br><span class="line">  round-trip min/avg/max = 16/27/32 ms</span><br></pre></td></tr></table></figure>
<p>PC２：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PC&gt;ping 192.168.1.1</span><br><span class="line"></span><br><span class="line">Ping 192.168.1.1: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">Request timeout!</span><br><span class="line">From 192.168.1.1: bytes=32 seq=2 ttl=126 time=15 ms</span><br><span class="line">From 192.168.1.1: bytes=32 seq=3 ttl=126 time=32 ms</span><br><span class="line">From 192.168.1.1: bytes=32 seq=4 ttl=126 time=15 ms</span><br><span class="line">From 192.168.1.1: bytes=32 seq=5 ttl=126 time=32 ms</span><br><span class="line"></span><br><span class="line">--- 192.168.1.1 ping statistics ---</span><br><span class="line">  5 packet(s) transmitted</span><br><span class="line">  4 packet(s) received</span><br><span class="line">  20.00% packet loss</span><br><span class="line">  round-trip min/avg/max = 0/23/32 ms</span><br><span class="line"></span><br><span class="line">PC&gt;ping 192.168.4.1</span><br><span class="line"></span><br><span class="line">Ping 192.168.4.1: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">Request timeout!</span><br><span class="line">From 192.168.4.1: bytes=32 seq=2 ttl=126 time=32 ms</span><br><span class="line">From 192.168.4.1: bytes=32 seq=3 ttl=126 time=15 ms</span><br><span class="line">From 192.168.4.1: bytes=32 seq=4 ttl=126 time=32 ms</span><br><span class="line">From 192.168.4.1: bytes=32 seq=5 ttl=126 time=31 ms</span><br><span class="line"></span><br><span class="line">--- 192.168.4.1 ping statistics ---</span><br><span class="line">  5 packet(s) transmitted</span><br><span class="line">  4 packet(s) received</span><br><span class="line">  20.00% packet loss</span><br><span class="line">  round-trip min/avg/max = 0/27/32 ms</span><br></pre></td></tr></table></figure>
<p>PC３：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PC&gt;ping 192.168.1.1</span><br><span class="line"></span><br><span class="line">Ping 192.168.1.1: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.1.1: bytes=32 seq=1 ttl=125 time=16 ms</span><br><span class="line">From 192.168.1.1: bytes=32 seq=2 ttl=125 time=31 ms</span><br><span class="line">From 192.168.1.1: bytes=32 seq=3 ttl=125 time=31 ms</span><br><span class="line">From 192.168.1.1: bytes=32 seq=4 ttl=125 time=31 ms</span><br><span class="line">From 192.168.1.1: bytes=32 seq=5 ttl=125 time=32 ms</span><br><span class="line"></span><br><span class="line">--- 192.168.1.1 ping statistics ---</span><br><span class="line">  5 packet(s) transmitted</span><br><span class="line">  5 packet(s) received</span><br><span class="line">  0.00% packet loss</span><br><span class="line">  round-trip min/avg/max = 16/28/32 ms</span><br><span class="line"></span><br><span class="line">PC&gt;ping 192.168.2.1</span><br><span class="line"></span><br><span class="line">Ping 192.168.2.1: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.2.1: bytes=32 seq=1 ttl=126 time=31 ms</span><br><span class="line">From 192.168.2.1: bytes=32 seq=2 ttl=126 time=31 ms</span><br><span class="line">From 192.168.2.1: bytes=32 seq=3 ttl=126 time=16 ms</span><br><span class="line">From 192.168.2.1: bytes=32 seq=4 ttl=126 time=16 ms</span><br><span class="line">From 192.168.2.1: bytes=32 seq=5 ttl=126 time=31 ms</span><br><span class="line"></span><br><span class="line">--- 192.168.2.1 ping statistics ---</span><br><span class="line">  5 packet(s) transmitted</span><br><span class="line">  5 packet(s) received</span><br><span class="line">  0.00% packet loss</span><br><span class="line">  round-trip min/avg/max = 16/25/31 ms</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>eNSP</category>
      </categories>
      <tags>
        <tag>rip</tag>
      </tags>
  </entry>
</search>
